
variables:
  DOCKER_REGISTRY: ecregistry.azurecr.io
  DOCKER_IMAGE_URL: ${DOCKER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}

stages:
  - build
  - test
  - deploy
  - integration


testing localhost vs graphcool:
  stage: test
  image: docker:1.13
  tags:
  - ec-test-cluster-3
  services:
  - docker:1.13-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  script:
  - docker login -u ecregistry -p ${DOCKER_REGISTRY_PASSWORD} https://${DOCKER_REGISTRY}
  - docker run ${DOCKER_IMAGE_URL}:${CI_BUILD_REF} yarn test-gitlab

testing localhost vs backend:
  stage: test
  image: docker:1.13
  tags:
  - ec-test-cluster-3
  services:
  - docker:1.13-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  script:
  - docker login -u ecregistry -p ${DOCKER_REGISTRY_PASSWORD} https://${DOCKER_REGISTRY}
  - docker run ${DOCKER_IMAGE_URL}:${CI_BUILD_REF} env API_URL_LOCALHOST=http://backend.bmai.pwc.delivery/v2/graphql yarn test-gitlab

integration testing on production:
  stage: integration
  image: docker:1.13
  tags:
  - ec-test-cluster-3
  services:
  - docker:1.13-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  script:
  - docker login -u ecregistry -p ${DOCKER_REGISTRY_PASSWORD} https://${DOCKER_REGISTRY}
  - docker run ${DOCKER_IMAGE_URL}:${CI_BUILD_REF} env NODE_ENV=production yarn test-gitlab
  only:
  - master

build container:
  stage: build
  image: docker:1.13
  tags:
  - ec-test-cluster-3
  services:
  - docker:1.13-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  script:
  - docker login -u ecregistry -p ${DOCKER_REGISTRY_PASSWORD} https://${DOCKER_REGISTRY}
  - docker pull ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG} || true
  - docker build --cache-from ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG} -t ${DOCKER_IMAGE_URL}:${CI_BUILD_REF} .
  - docker push ${DOCKER_IMAGE_URL}:${CI_BUILD_REF}
  - docker tag ${DOCKER_IMAGE_URL}:${CI_BUILD_REF} ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG}
  - docker push ${DOCKER_IMAGE_URL}:${CI_BUILD_REF_SLUG}

.deploy_template: &deploy_template
  stage: deploy
  image: itscfs/kubernetes-deploy
  script:
  - cd ops && ./deploy.sh
  artifacts:
    paths:
    - ops

.deploy_template_production: &deploy_template_production
  <<: *deploy_template
  environment:
    name: production
  tags:
  - ec-test-cluster-3
  only:
  - master

stable to production:
  <<: *deploy_template_production
